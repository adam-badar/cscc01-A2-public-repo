name: Docker Image CI

on:
  push:
    branches: ['group-3']
  pull_request:
    branches: ['group-3']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Get the current commit hash
        id: commit_hash
        run: echo ::set-output name=hash::$(git rev-parse --short HEAD)

      - name: Print commit hash
        run: echo "Commit hash:${{ steps.commit_hash.outputs.hash }}"

      - name: Copy a single file to ./client
        run: cp  ./package-lock.json ./client

      - name: Copy a single file to ./server
        run: cp  ./package-lock.json ./server

      - name: Set up Docker Build Environment for Client
        run: echo "${{ secrets.ENV_FILE_CLIENT }}" > ./client/.env

      - name: Set up Docker Build Environment for Server
        run: echo "${{ secrets.ENV_FILE_SERVER }}" > ./server/.env

      - name: Build the Client Docker image
        env:
          DOCKERHUB_USERNAME: ${{ secrets.GROUP3_DOCKERHUB_USERNAME }}
          DOCKERHUB_ACCESS_TOKEN: ${{ secrets.GROUP3_DOCKERHUB_ACCESS_TOKEN }}
        run: |
          cd client
          docker build --tag $DOCKERHUB_USERNAME/csc01-assignment2:client-${{ steps.commit_hash.outputs.hash }} .
          echo "$DOCKERHUB_ACCESS_TOKEN" | docker login --username $DOCKERHUB_USERNAME --password-stdin
          docker push  $DOCKERHUB_USERNAME/csc01-assignment2:client-${{ steps.commit_hash.outputs.hash }}

      - name: Build the Server Docker image
        env:
          DOCKERHUB_USERNAME: ${{ secrets.GROUP3_DOCKERHUB_USERNAME }}
          DOCKERHUB_ACCESS_TOKEN: ${{ secrets.GROUP3_DOCKERHUB_ACCESS_TOKEN }}
        run: |
          cd server
          docker build --tag $DOCKERHUB_USERNAME/csc01-assignment2:server-${{ steps.commit_hash.outputs.hash }} .
          echo "$DOCKERHUB_ACCESS_TOKEN" | docker login --username $DOCKERHUB_USERNAME --password-stdin
          docker push $DOCKERHUB_USERNAME/csc01-assignment2:server-${{ steps.commit_hash.outputs.hash }}
        
 # This workflow contains a single job called "deploy"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: "read"
      id-token: "write"

    env:
      # Replace $PROJECT_ID with your project ID
      IMAGE_NAME: gcr.io/cscc01-assignment-2/app

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          # Replace with your Workload Identity Provider Location
          workload_identity_provider: "projects/486375072405/locations/global/workloadIdentityPools/github-pool/providers/gh-provider"
          # Replace with your GitHub Service Account
          service_account: "github-actions-service-account@cscc01-assignment-2.iam.gserviceaccount.com"

      - name: Configure Docker
        run: gcloud auth configure-docker --quiet

      - id: deploy
        name: Deploy Docker image
        uses: "google-github-actions/deploy-cloudrun@v0"
        with:
          image: ${{ env.$DOCKERHUB_USERNAME/csc01-assignment2:client-${{ steps.commit_hash.outputs.hash }} . }}
          region: us-central1
          service: app
          flags: --port=8080
          
